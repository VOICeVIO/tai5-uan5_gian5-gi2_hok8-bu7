# -*- coding: utf-8 -*-
"""
著作權所有 (C) 民國102年 意傳文化科技
開發者：薛丞宏
網址：http://意傳.台灣
語料來源：請看各資料庫內說明

本程式乃自由軟體，您必須遵照SocialCalc設計的通用公共授權（Common Public Attribution License, CPAL)來修改和重新發佈這一程式，詳情請參閱條文。授權大略如下，若有歧異，以授權原文為主：
    １．得使用、修改、複製並發佈此程式碼，且必須以通用公共授權發行；
    ２．任何以程式碼衍生的執行檔或網路服務，必須公開該程式碼；
    ３．將此程式的原始碼當函式庫引用入商業軟體，且不需公開非關此函式庫的任何程式碼

此開放原始碼、共享軟體或說明文件之使用或散佈不負擔保責任，並拒絕負擔因使用上述軟體或說明文件所致任何及一切賠償責任或損害。

臺灣言語工具緣起於本土文化推廣與傳承，非常歡迎各界用於商業軟體，但希望在使用之餘，能夠提供建議、錯誤回報或修補，回饋給這塊土地。

感謝您的使用與推廣～～勞力！承蒙！
"""
from django.http.response import HttpResponse, JsonResponse
from 臺灣言語工具.解析整理.拆文分析器 import 拆文分析器
from 臺灣言語工具.解析整理.文章粗胚 import 文章粗胚
from 臺灣言語工具.音標系統.閩南語.臺灣閩南語羅馬字拼音 import 臺灣閩南語羅馬字拼音
from 臺灣言語工具.解析整理.物件譀鏡 import 物件譀鏡
from 臺灣言語工具.斷詞.拄好長度辭典揣詞 import 拄好長度辭典揣詞
from 臺灣言語工具.斷詞.連詞揀集內組 import 連詞揀集內組
from 臺灣言語服務.載入模型 import 全部翻譯母語模型


class 服務:
    _粗胚 = 文章粗胚()
    _分析器 = 拆文分析器()
    _譀鏡 = 物件譀鏡()
    _揣詞 = 拄好長度辭典揣詞()
    _揀集內組 = 連詞揀集內組()

    def 正規化翻譯(self, request):
        try:
            查詢腔口 = request.POST['查詢腔口']
        except:
            查詢腔口 = '閩南語'
        try:
            查詢語句 = request.POST['查詢語句']
        except:
            查詢語句 = '壹 隻 好 e5 豬'
            查詢語句 = '語句匯入傷濟改'
            查詢語句 = '語句匯入太多次'

        母語模型 = 全部翻譯母語模型[查詢腔口]

        整理後語句 = self._粗胚.數字英文中央全加分字符號(
            self._粗胚.建立物件語句前處理減號(臺灣閩南語羅馬字拼音, 查詢語句)
        )
        華語章物件 = self._分析器.轉做章物件(整理後語句)
        揣詞章物件, _, _ = self._揣詞.揣詞(母語模型['辭典'], 華語章物件)
        選好章物件, _, _ = self._揀集內組.揀(母語模型['連詞'], 揣詞章物件)

        try:
            閩南語章物件, _翻譯結構華語章物件, _分數 = 母語模型['摩西用戶端'].翻譯(選好章物件)
        except ConnectionRefusedError:
            return JsonResponse({'失敗': '服務啟動中，一分鐘後才試'})
        翻譯結果 = self._譀鏡.看分詞(閩南語章物件,
                            物件分詞符號=' ', 物件分字符號='-', 物件分句符號='')
        return self.文字包做回應(翻譯結果)

    def 語音合成(self, request, 查詢腔口, 集選擇字串, 查詢語句):
        print(查詢腔口, 集選擇字串, 查詢語句)
        集選擇 = self.看集選擇(集選擇字串)
        章物件 = self.標音工具.語句斷詞(查詢腔口, 查詢語句)
        揀好章物件 = self.揀字.揀(章物件, 集選擇)
        全部標仔 = self.章物件轉標仔(查詢腔口, 揀好章物件)
        音檔 = self.標仔合音檔(查詢腔口, 全部標仔)
        調好音 = self.音標調音(查詢腔口, 音檔)
        return self.音檔包做回應(調好音)

    # 等新閩南語做好，才做伙整合到語音合成
    def 章物件轉標仔(self, 查詢腔口, 章物件):
        全部標仔 = []
        for 句物件 in 章物件.內底句:
            if 查詢腔口.startswith(閩南語):
                標仔 = self.舊閩南語合成標籤工具.句物件轉標籤(句物件)
            else:
                標仔 = self.合成標籤工具.句物件轉標籤(臺灣客家話拼音, 句物件)
            if len(全部標仔) > 0:
                全部標仔 = 全部標仔[:-1]
            全部標仔.extend(標仔)
        return 全部標仔

    def 標仔合音檔(self, 查詢腔口, 標仔):
        模型 = self.腔模型[查詢腔口]
        速度 = self.腔放送進度[查詢腔口]
        音檔 = self.轉音檔.合成(模型, 速度, 標仔)
        return 音檔

    def 音標調音(self, 查詢腔口, 音檔):
        if 查詢腔口.startswith(閩南語):
            調好音 = self.音盒.篩雜訊(音檔)
        elif 查詢腔口.startswith(客話):
            調好音 = self.音盒.篩懸音(音檔, 6000)
        else:
            調好音 = 音檔
        return 調好音

    def 文字包做回應(self, 文字):
        回應 = HttpResponse(文字)
        return 回應

    def 音檔包做回應(self, 音檔):
        回應 = HttpResponse()
        回應.write(音檔)
        回應['Content-Type'] = 'audio/x-wav'
        回應['Content-Length'] = len(音檔)
        return 回應
